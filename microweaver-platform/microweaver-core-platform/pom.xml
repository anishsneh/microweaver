<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>microweaver-core-platform</artifactId>
	<packaging>jar</packaging>
	<name>microweaver-core-platform</name>
	<url>http://maven.apache.org</url>
	<parent>
		<groupId>com.anishsneh.microweaver</groupId>
		<artifactId>microweaver-platform</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<docker.image.prefix>microweaver</docker.image.prefix>
		<docker.image.base>base</docker.image.base>
	</properties>
	<dependencies>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>3.8.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>${project.name}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- Disable default deploy plugin unless target maven repository is configured -->
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>1.0.0</version>
						<configuration>
							<imageName>${docker.image.prefix}/${docker.image.base}</imageName>
							<dockerDirectory>${basedir}/src/main/docker</dockerDirectory>
							<noCache>false</noCache>
						</configuration>
						<executions>
							<execution>
								<id>build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
								<configuration>
									<imageTags>
										<imageTag>${project.version}</imageTag>
									</imageTags>
								</configuration>
							</execution>
							<execution>
								<id>tag-image</id>
								<phase>package</phase>
								<goals>
									<goal>tag</goal>
								</goals>
								<configuration>
									<image>${docker.image.prefix}/${docker.image.base}:${project.version}</image>
									<newName>${docker.registry.url}/${docker.image.prefix}/${docker.image.base}:${project.version}</newName>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<!-- Clean images during clean -->
							<execution>
								<id>clean-image-01</id>
								<phase>clean</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<arguments>
										<argument>rmi</argument>
										<argument>-f</argument>
										<argument>${docker.image.prefix}/${docker.image.base}:latest</argument>
									</arguments>
									<successCodes>
										<successCode>0</successCode>
										<successCode>1</successCode>
									</successCodes>
								</configuration>
							</execution>
							<execution>
								<id>clean-image-02</id>
								<phase>clean</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<arguments>
										<argument>rmi</argument>
										<argument>-f</argument>
										<argument>${docker.image.prefix}/${docker.image.base}:${project.version}</argument>
									</arguments>
									<successCodes>
										<successCode>0</successCode>
										<successCode>1</successCode>
									</successCodes>
								</configuration>
							</execution>
							<execution>
								<id>clean-image-03</id>
								<phase>clean</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<arguments>
										<argument>rmi</argument>
										<argument>-f</argument>
										<argument>${docker.registry.url}/${docker.image.prefix}/${docker.image.base}:${project.version}</argument>
									</arguments>
									<successCodes>
										<successCode>0</successCode>
										<successCode>1</successCode>
									</successCodes>
								</configuration>
							</execution>

							<!-- Push image to target docker registry -->
							<execution>
								<id>push-image</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>deploy</phase>
								<configuration>
									<executable>docker</executable>
									<arguments>
										<argument>push</argument>
										<argument>${docker.registry.url}/${docker.image.prefix}/${docker.image.base}:${project.version}</argument>
									</arguments>
									<successCodes>
										<successCode>0</successCode>
										<successCode>1</successCode>
									</successCodes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
