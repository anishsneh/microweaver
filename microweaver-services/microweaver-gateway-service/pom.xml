<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>microweaver-gateway-service</artifactId>
	<packaging>jar</packaging>
	<name>microweaver-gateway-service</name>
	<description>Microweaver Gateway Microservice</description>
	<parent>
		<groupId>com.anishsneh.microweaver</groupId>
		<artifactId>microweaver-services</artifactId>
		<version>0.0.1-SNAPSHOT</version>
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-zuul</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<finalName>${project.name}</finalName>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- Disable default deploy plugin unless target maven repository is configured -->
			<plugin>
				<artifactId>maven-deploy-plugin</artifactId>
				<executions>
					<execution>
						<id>default-deploy</id>
						<phase>none</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>docker</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.spotify</groupId>
						<artifactId>docker-maven-plugin</artifactId>
						<version>1.0.0</version>
						<configuration>
							<imageName>${docker.image.prefix}/${project.artifactId}</imageName>
							<dockerDirectory>${basedir}/src/main/docker</dockerDirectory>
							<buildArgs>
								<finalName>${project.build.finalName}.jar</finalName>
							</buildArgs>
							<resources>
								<resource>
									<targetPath>/</targetPath>
									<directory>${project.build.directory}</directory>
									<include>${project.build.finalName}.jar</include>
								</resource>
							</resources>
						</configuration>
						<executions>
							<execution>
								<id>build-image</id>
								<phase>package</phase>
								<goals>
									<goal>build</goal>
								</goals>
								<configuration>
									<imageTags>
										<imageTag>${project.version}</imageTag>
									</imageTags>
								</configuration>
							</execution>
							<execution>
								<id>tag-image</id>
								<phase>package</phase>
								<goals>
									<goal>tag</goal>
								</goals>
								<configuration>
									<image>${docker.image.prefix}/${project.artifactId}:${project.version}</image>
									<newName>${docker.registry.url}/${docker.image.prefix}/${project.artifactId}:${project.version}</newName>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<executions>
							<!-- Clean images during clean -->
							<execution>
								<id>clean-image-01</id>
								<phase>clean</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<arguments>
										<argument>rmi</argument>
										<argument>-f</argument>
										<argument>${docker.image.prefix}/${project.artifactId}:latest</argument>
									</arguments>
									<successCodes>
										<successCode>0</successCode>
										<successCode>1</successCode>
									</successCodes>
								</configuration>
							</execution>
							<execution>
								<id>clean-image-02</id>
								<phase>clean</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<arguments>
										<argument>rmi</argument>
										<argument>-f</argument>
										<argument>${docker.image.prefix}/${project.artifactId}:${project.version}</argument>
									</arguments>
									<successCodes>
										<successCode>0</successCode>
										<successCode>1</successCode>
									</successCodes>
								</configuration>
							</execution>
							<execution>
								<id>clean-image-03</id>
								<phase>clean</phase>
								<goals>
									<goal>exec</goal>
								</goals>
								<configuration>
									<executable>docker</executable>
									<arguments>
										<argument>rmi</argument>
										<argument>-f</argument>
										<argument>${docker.registry.url}/${docker.image.prefix}/${project.artifactId}:${project.version}</argument>
									</arguments>
									<successCodes>
										<successCode>0</successCode>
										<successCode>1</successCode>
									</successCodes>
								</configuration>
							</execution>
							<!-- Push image to target docker registry -->
							<execution>
								<id>push-image</id>
								<goals>
									<goal>exec</goal>
								</goals>
								<phase>deploy</phase>
								<configuration>
									<executable>docker</executable>
									<arguments>
										<argument>push</argument>
										<argument>${docker.registry.url}/${docker.image.prefix}/${project.artifactId}:${project.version}</argument>
									</arguments>
									<successCodes>
										<successCode>0</successCode>
										<successCode>1</successCode>
									</successCodes>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
